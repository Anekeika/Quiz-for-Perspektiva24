{"version":3,"sources":["components/Start.js","components/Question.js","components/Sending.js","components/Slider.js","components/End.js","layouts/Header.js","App.js","index.js"],"names":["Start","onQuizStart","className","type","onClick","Question","data","onAnswerUpdate","numberOfQuestion","activeQuestion","onSetActiveQuestion","onSetStep","useState","selected","setSelected","error","setError","answerToggle","choice","e","target","checked","uniq","filter","a","radioHandler","value","question","multiAnswerQuestions","choices","map","i","name","some","onChange","length","prevState","q","Sending","results","setName","nameDirty","setNameDirty","nameError","setNameError","surname","setSurname","email","setEmail","emailError","setEmailError","phone","setPhone","phoneDirty","setPhoneDirty","phoneError","setPhoneError","setCommunication","communicationDirty","setCommunicationDirty","communicationError","setCommunicationError","formValid","setFormValid","useEffect","blurHandler","changeCommunicationHandler","onBlur","nameHandler","placeholder","surnameHandler","test","String","toLowerCase","emailHandler","phoneHandler","Slider","setValue","valueHandler","min","max","step","End","quizStartAgain","Header","href","src","width","height","alt","App","setStep","setActiveQuestion","answers","setAnswers","setSliderValue","questions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a4649f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Start = ({onQuizStart}) => {\r\n    return(\r\n\r\n        <div className=\"card has-background-info-dark has-text-primary-light\">\r\n            <div className=\"card-content\">\r\n                <div className=\"content is-medium\">\r\n                    <h1 className=\"title is-2 has-text-primary-light\">Выгодные предложения от застройщиков только у нас!</h1>\r\n                    <p className=\"\">Получите подбор новостроек под Ваши критерии в кратчайшие сроки</p>\r\n                    <button className=\"glow-on-hover\" type=\"button\" onClick={onQuizStart}><p className=\"is-size-4\">Начнем!</p></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start;","import React, {useState} from 'react'\r\nimport uniq from \"lodash/uniq\"\r\n\r\nconst Question = ({data, onAnswerUpdate, numberOfQuestion, activeQuestion, onSetActiveQuestion, onSetStep}) => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    // useEffect(() => {\r\n    //         const findCheckedInput = radioWrapper.current.querySelector('input:checked');\r\n    //         if (findCheckedInput) {\r\n    //             findCheckedInput.checked = false;\r\n    //         }\r\n    // }, [data]);\r\n\r\n    // const changeHandler = (e) => {\r\n    //     setSelected(e.target.value);\r\n    //     if (error) {\r\n    //         setError('');\r\n    //     }\r\n    // }\r\n\r\n    function answerToggle(choice) {\r\n        return function (e) {\r\n            if (e.target.checked) {\r\n                setSelected(uniq([...selected, choice]))\r\n            } else {\r\n                setSelected(selected.filter(a => a !== choice))\r\n            }\r\n        }\r\n    }\r\n\r\n    const radioHandler = (e) => {setSelected([e.target.value])}\r\n\r\n    const nextClickHandler = (e) => {\r\n        if (selected.length === 0) {\r\n            return setError('Пожалуйста, выберите один вариант!');\r\n        }\r\n        onAnswerUpdate(prevState => [...prevState, {q: data.question, a: selected}]);\r\n        setSelected([]);\r\n        setError('');\r\n        if (activeQuestion < numberOfQuestion - 1) {\r\n            onSetActiveQuestion(activeQuestion + 1);\r\n        } else {\r\n            onSetStep(3);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card has-background-info-dark has-text-primary-light\">\r\n            <div className=\"card-content card-shadow\">\r\n                <div className=\"content\">\r\n                    <h2 className=\"card-header-title mb-0 is-3 has-text-primary-light\">{data.question}</h2>\r\n\r\n                    {data.multiAnswerQuestions ?\r\n                        (<div className=\"control\">\r\n                            {data.choices.map((choice, i) => (\r\n                                <label className=\"checkbox\" key={i}>\r\n                                    <input type=\"checkbox\" name=\"answer\" checked={selected.some(a => a === choice)}\r\n                                           onChange={answerToggle(choice)}/>\r\n                                    {choice}\r\n                                </label>\r\n                            ))}\r\n                        </div>)\r\n                        :\r\n                        (<div className=\"control\">\r\n                            {data.choices.map((choice, i) => (\r\n                                <label className=\"radio\" key={i}>\r\n                                    <input type=\"radio\" name=\"answer\" value={choice} checked={selected.some(a => a === choice)}\r\n                                           onChange={radioHandler}/>\r\n                                    {choice}\r\n                                </label>\r\n                            ))}\r\n                        </div>)\r\n                    }\r\n                    {error && <div className=\"has-text-danger\">{error}</div>}\r\n                    <button className=\"glow-on-hover btn\" type=\"button\" onClick={nextClickHandler}><p>Следующий вопрос</p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React, {useState, useEffect} from 'react';\r\n\r\nconst Sending = ({results, onSetStep}) => {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [nameDirty, setNameDirty] = useState(false)\r\n    const [nameError, setNameError] = useState('Имя не может быть пустым')\r\n\r\n    const [surname, setSurname] = useState('')\r\n\r\n    const [email, setEmail] = useState('')\r\n    //const [emailDirty, setEmailDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('')//Емеил не может быть пустым\r\n\r\n    const [phone, setPhone] = useState('')\r\n    const [phoneDirty, setPhoneDirty] = useState(false)\r\n    const [phoneError, setPhoneError] = useState('Номер телефона не может быть пустым')\r\n\r\n    //const [customerData, setCustomerData] = useState([])\r\n\r\n    const [communication, setCommunication] = useState('')\r\n    const [communicationDirty, setCommunicationDirty] = useState(false)\r\n    const [communicationError, setCommunicationError] = useState('Пожалуйста, выберите один вариант');\r\n\r\n    const [formValid, setFormValid] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (nameError || emailError || phoneError || communicationError) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }, [nameError, emailError, phoneError, communicationError])\r\n\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'name':\r\n                setNameDirty(true)\r\n                break\r\n            // case 'email':\r\n            //     setEmailDirty(true)\r\n            //     break\r\n            case 'phone':\r\n                setPhoneDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const nameHandler = (e) => {\r\n        setName(e.target.value)\r\n        if (e.target.value.length < 2) {\r\n            setNameError('Имя не может быть короче 2 букв')\r\n        } else if (e.target.value.length > 20) {\r\n            setNameError('Имя не может быть длинее 20 букв')\r\n        } else if (!e.target.value) {\r\n            setNameError('Имя не может быть пустым')\r\n        } else {\r\n            setNameError('')\r\n        }\r\n    }\r\n\r\n    const surnameHandler = (e) => {\r\n        setSurname(e.target.value)\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        if (e.target.value.length === 0) {\r\n            setEmailError('')\r\n\r\n        } else {\r\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if (!re.test(String(e.target.value).toLowerCase())) {\r\n                setEmailError('Некорректный емейл')\r\n            } else {\r\n                setEmailError('')\r\n            }\r\n        }\r\n    }\r\n\r\n    const phoneHandler = (e) => {\r\n        setPhone(e.target.value)\r\n        if (!e.target.value) {\r\n            setPhoneError('Номер телефона не может быть пустым')\r\n        } else {\r\n            setPhoneError('')\r\n        }\r\n    }\r\n\r\n    const changeCommunicationHandler = (e) => {\r\n        setCommunication(e.target.value);\r\n        if (!e.target.value) {\r\n            setCommunicationError('Пожалуйста, выберите один вариант')\r\n        } else {\r\n            setCommunicationError('')\r\n        }\r\n    }\r\n\r\n    const sendClickHandler = () => {\r\n        setNameDirty(true)\r\n        //setEmailDirty(true)\r\n        setPhoneDirty(true)\r\n        setCommunicationDirty(true)\r\n        if (formValid) {\r\n            onSetStep(5);\r\n        }\r\n    }\r\n\r\n    // function changeHandler(index, e) {\r\n    //     setCustomerData([...customerData.slice(0, index), e.target.value, ...customerData.slice(index + 1)]);\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"card has-background-info-dark has-text-primary-light\">\r\n            <div className=\"card-content\">\r\n                <div className=\"content is-medium\">\r\n                    <h2 className=\"mb-5 title is-2 has-text-primary-light\">Заполните данные для отправки</h2>\r\n                    <div className=\"control\">\r\n                        {(nameDirty && nameError) && <div className=\"has-text-danger\">{nameError}</div>}\r\n                        <input\r\n                            value={name}\r\n                            onBlur={e => blurHandler(e)}\r\n                            className=\"input is-rounded input-end\"\r\n                            name='name'\r\n                            type='text'\r\n                            onChange={e => nameHandler(e)}\r\n                            placeholder='Введите имя....'\r\n                        />\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <input\r\n                            value={surname}\r\n                            className=\"input is-rounded input-end\"\r\n                            name='surname'\r\n                            type='text'\r\n                            onChange={e => surnameHandler(e)}\r\n                            placeholder='Введите фамилию (не обязательно)....'\r\n                        />\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        {(/*emailDirty &&*/ emailError) && <div className=\"has-text-danger\">{emailError}</div>}\r\n                        <input\r\n                            value={email}\r\n                            onBlur={e => blurHandler(e)}\r\n                            className=\"input is-rounded input-end\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={e => emailHandler(e)}\r\n                            placeholder=\"Введите почту (не обязательно)....\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        {(phoneDirty && phoneError) && <div className=\"has-text-danger\">{phoneError}</div>}\r\n                        <input\r\n                            value={phone}\r\n                            onBlur={e => blurHandler(e)}\r\n                            className=\"input is-rounded input-end\"\r\n                            name='phone'\r\n                            type='tel'\r\n                            onChange={e => phoneHandler(e)}\r\n                            placeholder='Введите номер телефона....'/>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <p className=\"is-size-4 mb-0\">Как свами лучше связаться?</p>\r\n                        {(communicationDirty && communicationError) &&\r\n                        <div className=\"has-text-danger\">{communicationError}</div>}\r\n                        <label className=\"radio\">\r\n                            <input type=\"radio\" name=\"foobar\" value='Mail' onChange={changeCommunicationHandler}/>По\r\n                            почте\r\n                        </label>\r\n                        <label className=\"radio\">\r\n                            <input type=\"radio\" name=\"foobar\" value='Phone' onChange={changeCommunicationHandler}/>По\r\n                            телефону\r\n                        </label>\r\n                        <label className=\"radio\">\r\n                            <input type=\"radio\" name=\"foobar\" value='WhatsApp' onChange={changeCommunicationHandler}/>По\r\n                            WhatsApp\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"glow-on-hover\"\r\n                        type=\"submit\"\r\n                        onClick={() => sendClickHandler()}\r\n                    >Отправить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sending;","import React, {useState} from 'react'\r\n\r\nconst Slider = ({onSetStep}) => {\r\n\r\n    const [value, setValue] = useState('6000000')\r\n\r\n    const valueHandler = (e) => {setValue([e.target.value])}\r\n\r\n    const nextClickHandler = (e) => {\r\n        {\r\n            onSetStep(4);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card has-background-info-dark has-text-primary-light\">\r\n            <div className=\"card-content\">\r\n                <div className=\"content\">\r\n                    <h2 className=\"card-header-title mb-0 is-3 has-text-primary-light\">Укажите примерную стоимость:</h2>\r\n                    <div>\r\n                    <input\r\n                        value={value}\r\n                        className=\"slider-input input is-rounded\"\r\n                        name='cost'\r\n                        type='number'\r\n                        min=\"6000000\"\r\n                        max=\"50000000\"\r\n                        step=\"100000\"\r\n                        onChange={e => valueHandler(e)}\r\n                        placeholder={value}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                    <input\r\n                        className=\"slider mt-4\"\r\n                        type=\"range\"\r\n                        min=\"6000000\"\r\n                        max=\"50000000\"\r\n                        step=\"100000\"\r\n                        onChange={e => valueHandler(e)}\r\n                        value={value}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    className=\"glow-on-hover\"\r\n                    type=\"button\"\r\n                    onClick={nextClickHandler}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nconst End = ({quizStartAgain}) => {\r\n    return(\r\n        <div className=\"card has-background-info-dark has-text-primary-light\">\r\n            <div className=\"card-content\">\r\n                <div className=\"content\">\r\n                    <h1 className=\"is-2 has-text-primary-light\">Спасибо что прошли наш опрос!</h1>\r\n                    <p className=\"is-size-4\">В ближайшее время с вами свяжется наш менеджер.</p>\r\n                    <button className=\"glow-on-hover\" type=\"button\" onClick={quizStartAgain}>Пройти заново</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default End;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"navbar has-background-info-dark has-text-primary-light\">\r\n            <div className=\"navbar-brand\">\r\n                <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n                    <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" alt=\"logo\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header-end mr-3\">\r\n                <div className=\"navbar-item\">\r\n                    <div className=\"content is-medium has-text-primary-light\">\r\n                        <p> 8(123)-321-32-32</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\nimport './App.css';\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport Sending from \"./components/Sending\";\nimport questions from './data/questions.json'\nimport Slider from \"./components/Slider\";\nimport End from \"./components/End\";\nimport Header from \"./layouts/Header\";\n\n\nconst App = () => {\n\n    const [step, setStep] = useState(1);\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    const [answers, setAnswers] = useState([]);\n    const [sliderValue, setSliderValue] = useState(6000000)\n\n\n    const quizStartHandler = () => {\n        setStep(2);\n    }\n\n    const quizStartAgainHandler = () => {\n        setStep(1);\n        setActiveQuestion(0);\n    }\n\n    return (\n        <>\n            <Header/>\n            <div className='App'>\n                {step === 1 && <Start onQuizStart={quizStartHandler}/>}\n                {step === 2 && <Question\n                    data={questions.data[activeQuestion]}\n                    onAnswerUpdate={setAnswers}\n                    numberOfQuestion={questions.data.length}\n                    activeQuestion={activeQuestion}\n                    onSetActiveQuestion={setActiveQuestion}\n                    onSetStep={setStep}\n                />}\n                {step === 3 && <Slider\n                    setSliderValue={setSliderValue}\n                    onSetStep={setStep}\n                />}\n                {step === 4 && <Sending\n                    results={answers}\n                    onSetStep={setStep}\n                />}\n                {step === 5 && <End\n                    quizStartAgain={quizStartAgainHandler}\n                />}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma-rtl.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}